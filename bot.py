import sqlite3
import telebot
from telebot import types

token = '5965081035:AAGOY9lXG0IP4xmCqIbZvAifjp_4yXjvVfc'

bot = telebot.TeleBot(token)


class BotDB:

    def __init__(self, db_file):
        self.conn = sqlite3.connect(db_file)
        self.cursor = self.conn.cursor()

    def number_exists(self, number):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–º–µ—Ä –≤ –±–∞–∑–µ"""
        result = self.cursor.execute("SELECT `id` FROM `records` WHERE `number` = ?", (number,))
        return bool(len(result.fetchall()))

    def get_spam_count(self, number):
        """–î–æ—Å—Ç–∞–µ–º spam_count –Ω–æ–º–µ—Ä–∞"""
        result = self.cursor.execute("SELECT `spam_count` FROM `records` WHERE `number` = ?", (number,))
        return result.fetchone()[0]

    def add_number(self, number):
        """–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –≤ –±–∞–∑—É"""
        self.cursor.execute("INSERT INTO `records` (`number`) VALUES (?)", (number,))
        return self.conn.commit()

    def add_record(self, number, spam_count):
        """–°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ —Å–ø–∞–º–µ"""
        self.cursor.execute("INSERT INTO `records` (`number`, `spam_count`) VALUES (?, ?)", number, spam_count + 1)
        return self.conn.commit()

    def close(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î"""
        self.connection.close()


database = BotDB('numbers.db')


@bot.message_handler(commands=["start"])
def welcome(message):
    # database

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–º–µ—Ä")
    markup.add(item1)
    bot.send_message(message.chat.id,
                     "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –æ—á–∏—Å—Ç–∏—Ç—å —Ç–≤–æ–∏ –∑–≤–æ–Ω–∫–∏ –æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—ã—Ö —Å–ø–∞–º–µ—Ä–æ–≤".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=["text"])
def repeat_all_messages(message):
    if message.chat.type == 'private':
        if message.text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–º–µ—Ä':
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!')
        elif message.text == message.text:
            bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä—è—é')
            if database.number_exists(message.text) == True:
                bot.send_message(message.chat.id, database.get_spam_count())
            else: database.add_number(message.text)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '')
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å")

if __name__ == '__main__':
    bot.infinity_polling()
